--DELETION OF PRE-EXISTING TABLES--

DROP TABLE customers CASCADE;
DROP TABLE reservations CASCADE;
DROP TABLE payment CASCADE;
DROP TABLE discounts CASCADE;
DROP TABLE discounts_information CASCADE;
DROP TABLE penalties CASCADE;
DROP TABLE penalties_information CASCADE;
DROP TABLE rooms CASCADE;
DROP TABLE parking CASCADE;
DROP TABLE workers CASCADE;
DROP TABLE reception_desk_duty_schedule CASCADE;
DROP TABLE room_cleaning_schedule CASCADE;
DROP TABLE order_services CASCADE;
DROP TABLE additional_services CASCADE;


--CREATING TABLES--
--Creating tables with primary keys, foreign keys and check rows--


--Customers--

CREATE TABLE customers(
id_customer INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
pesel VARCHAR(50) NOT NULL UNIQUE CHECK (pesel ~ '^[0-9]{11}$'),
name VARCHAR(50) NOT NULL,
surname VARCHAR(50) NOT NULL,
city VARCHAR(50) NOT NULL,
street VARCHAR(50) NOT NULL,
home_number INTEGER CHECK (home_number > 0),
apartment_number INTEGER ,
zip_code VARCHAR(50) CHECK (zip_code ~ '^[0-9]{2}-[0-9]{3}$'),
email VARCHAR(50) UNIQUE
);


--Rooms--

CREATE TABLE rooms(
room_number INTEGER PRIMARY KEY CHECK (room_number < 80),
people INTEGER NOT NULL CHECK (people > 0 AND people < 5),
beds INTEGER NOT NULL CHECK (beds > 0 AND beds < 4 AND beds <= people),
room_price DECIMAL(8,2) NOT NULL
);


--Workers--

CREATE TABLE workers(
id_worker INTEGER PRIMARY KEY,
name_worker VARCHAR(50) NOT NULL,
surnname_worker VARCHAR(50) NOT NULL,
birthdate DATE NOT NULL,
position VARCHAR(50) NOT NULL CHECK (position IN ('receptionist', 'maid', 'doorman','director','cleaner'))
);


--Parking--

CREATE TABLE parking(
parking_number INTEGER PRIMARY KEY
);


--Reservations--

CREATE TABLE reservations(
id_reservation INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
id_customer INTEGER NOT NULL REFERENCES customers(id_customer) ON DELETE CASCADE ON UPDATE CASCADE,
room_number INTEGER NOT NULL REFERENCES rooms(room_number) ON DELETE CASCADE ON UPDATE CASCADE,
id_worker INTEGER NOT NULL REFERENCES workers(id_worker) ON DELETE CASCADE ON UPDATE CASCADE,
start_date DATE NOT NULL,
end_date DATE NOT NULL,
if_parking BOOLEAN NOT NULL DEFAULT(true),
parking_number INTEGER NOT NULL REFERENCES parking(parking_number) ON DELETE CASCADE ON UPDATE CASCADE
);

--Payment--

CREATE TABLE payment(
id_payment INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
id_reservation INTEGER NOT NULL REFERENCES reservations(id_reservation) ON DELETE CASCADE ON UPDATE CASCADE,
to_pay DECIMAL(8,2) NOT NULL DEFAULT(0),
method_of_payment VARCHAR(50) DEFAULT('cash') CHECK (method_of_payment IN ('cash', 'card', 'bon','blik','check'))
);


--Discounts--

CREATE TABLE discounts_information(
code INTEGER PRIMARY KEY,
amount_of_discount DECIMAL(8,2) NOT NULL CHECK (amount_of_discount >= 0 AND amount_of_discount <= 1),
description_of_discount TEXT NOT NULL
);


CREATE TABLE discounts(
id_discount INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
code INTEGER NOT NULL REFERENCES discounts_information(code) ON DELETE CASCADE ON UPDATE CASCADE,
id_payment INTEGER NOT NULL REFERENCES payment(id_payment) ON DELETE CASCADE ON UPDATE CASCADE
);


--Penalties--

CREATE TABLE penalties_information(
penalty_code INTEGER PRIMARY KEY,
amount_of_penalty DECIMAL(8,2) NOT NULL,
description_of_penalty TEXT NOT NULL
);


CREATE TABLE penalties(
id_penalty INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
penalty_code INTEGER  NOT NULL REFERENCES penalties_information(penalty_code) ON DELETE CASCADE ON UPDATE CASCADE,
id_payment INTEGER NOT NULL REFERENCES payment(id_payment) ON DELETE CASCADE ON UPDATE CASCADE
);

--Reception_desk schedule--

CREATE TABLE reception_desk_duty_schedule(
id_reception_desk_duty INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
id_worker INTEGER NOT NULL REFERENCES workers(id_worker) ON DELETE CASCADE ON UPDATE CASCADE,
date_duty DATE NOT NULL,
start_duty TIME NOT NULL DEFAULT('08:00:00'),
end_duty TIME NOT NULL
);


CREATE TABLE room_cleaning_schedule(
id_room_cleaning INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
id_worker INTEGER NOT NULL REFERENCES workers(id_worker) ON DELETE CASCADE ON UPDATE CASCADE,
room_number INTEGER NOT NULL REFERENCES rooms(room_number) ON DELETE CASCADE ON UPDATE CASCADE,
cleaning_date DATE NOT NULL,
cleaning_hours TIME NOT NULL
);


--Hotel services --

CREATE TABLE additional_services(
id_service INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
price DECIMAL(8,2) NOT NULL,
description TEXT NOT NULL
);


CREATE TABLE order_services(
id_order INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
id_service INTEGER NOT NULL REFERENCES additional_services(id_service) ON DELETE CASCADE ON UPDATE CASCADE,
id_reservation INTEGER NOT NULL REFERENCES reservations(id_reservation) ON DELETE CASCADE ON UPDATE CASCADE,
order_date DATE NOT NULL,
amount INTEGER NOT NULL CHECK (amount > 0)
);